name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: build
      run: cargo build --release

    - name: upload artifact release
      uses: actions/upload-artifact@v2
      with:
        name: artifact-ubuntu
        path: ./target/release/s3-download-files-capnp-generator

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: cargo build --release

      - name: upload artifact release
        uses: actions/upload-artifact@v2
        with:
          name: artifact-macos
          path: ./target/release/s3-download-files-capnp-generator

  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: [ build-macos, build-ubuntu ]
    steps:
      - name: Download ubuntu artifact content
        uses: actions/download-artifact@v2
        with:
          name: artifact-ubuntu
      - name: Archive ubuntu release
        uses: thedoctor0/zip-release@master
        with:
          filename: release-linux.tar.gz
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: release-linux.tar.gz
          asset_name: s3-download-files-capnp-generator-v${{ github.run_number }}.tar.gz
          asset_content_type: application/zip

      - name: Download macos artifact content
        uses: actions/download-artifact@v2
        with:
          name: artifact-macos
      - name: Archive macos release
        uses: thedoctor0/zip-release@master
        with:
          filename: release-macos.tar.gz
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: release-macos.tar.gz
          asset_name: s3-download-files-capnp-generator-v${{ github.run_number }}.tar.gz
          asset_content_type: application/zip
