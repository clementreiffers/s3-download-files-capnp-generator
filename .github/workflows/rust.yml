name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: build
      run: cargo build --release

    - name: upload artifact release
      uses: actions/upload-artifact@v2
      with:
        name: artifact-ubuntu
        path: ./target/release/s3-download-files-capnp-generator

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: cargo build --release

      - name: upload artifact release
        uses: actions/upload-artifact@v2
        with:
          name: artifact-macos
          path: ./target/release/s3-download-files-capnp-generator

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: cargo build --release

      - name: upload artifact release
        uses: actions/upload-artifact@v2
        with:
          name: artifact-windows
          path: ./target/release/s3-download-files-capnp-generator.exe

  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: [ build-windows, build-macos, build-ubuntu ]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          id: create_release
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Download ubuntu artifact content
        uses: actions/download-artifact@v2
        with:
          name: artifact-ubuntu
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-ubuntu
          asset_name: ubuntu-s3-download-capnp-generator.elf
          asset_content_type: application/octet-stream

      - name: Download macos artifact content
        uses: actions/download-artifact@v2
        with:
          name: artifact-macos
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-macos
          asset_name: macos-s3-download-capnp-generator.app
          asset_content_type: application/octet-stream


      - name: Download macos artifact content
        uses: actions/download-artifact@v2
        with:
          name: artifact-windows
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-windows
          asset_name: windows-s3-download-capnp-generator.exe
          asset_content_type: application/x-msdownload.

